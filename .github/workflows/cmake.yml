name: CMake Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
# d
on:
  push:
    branches:
      - rel/*
      - dev/*
      - main
  pull_request:
    branches:
      - rel/*
      - dev/*
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_GIT_REF: 8a9a97315aefb3f8bc5d81bf66ca0025938b9c91

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v1

      - name: Install Build Tools
        run: brew install bison flex

      - name: Install Dependencies
        run: brew install bzip2 check curl-openssl json-c libxml2 ncurses openssl@1.1 pcre2 zlib

      - name: Install pytest for easier to read test results
        run: python3 -m pip install pytest

      - uses: lukka/get-cmake@v3.21.2

      - name: Create Build Directory
        shell: bash
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{runner.workspace}}/build

      - name: Configure CMake
        # Use a bash shell so we can use the same syntax for environment variable
        # access regardless of the host operating system
        working-directory: ${{runner.workspace}}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run:
          cmake ${{runner.workspace}}/clamav -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1/
          -DOPENSSL_CRYPTO_LIBRARY=/usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib
          -DOPENSSL_SSL_LIBRARY=/usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib
          -DENABLE_STATIC_LIB=ON
          -DENABLE_EXAMPLES=ON

      - name: Build
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build . --config ${{ env.BUILD_TYPE }}

      - name: Test
        shell: bash
        working-directory: ${{runner.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest -C ${{ env.BUILD_TYPE }} -V
